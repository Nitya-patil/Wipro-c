Challenge: Area Calculation (Implicit vs. Explicit): Write two functions to calculate the area of a rectangle. One function should take two int arguments for width and height and return an int area. The other function should take two double arguments and return a double area. Discuss the implications of using implicit and explicit casting in these functions.

#include <iostream>

int calculateArea(int width, int height) {
    return width * height;
}


double calculateArea(double width, double height) {
    return width * height;
}

int main() {
  
    int widthInt = 5, heightInt = 3;
    int areaInt = calculateArea(widthInt, heightInt);
    
    double area = static_cast<double>(areaInt);
    std::cout << "Area of rectangle in int type  : " << areaInt << std::endl;
      std::cout << "Area of rectangle explicit in double  : " << area << std::endl;
    
    
   
    double widthDouble = 5.5, heightDouble = 3.5;
    double areaDouble = calculateArea(widthDouble, heightDouble);
    int area1 = static_cast<int>(areaDouble);
    std::cout << "Area of rectangle in double type  : "  << areaDouble<< std::endl;
    std::cout << "Area of rectangle explicit in int  : " << area1 << std::endl;

    return 0;
}