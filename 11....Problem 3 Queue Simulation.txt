Problem 3: Queue Simulation
Description:
Implement a program using the std::queue container to simulate a ticketing system. The program should:

Add customers to the queue.
Serve customers (remove from front of the queue).
Display the current queue.
Display the number of customersÂ served.


#include <iostream>
#include <queue>
#include <string>

// Function to display the current queue
void displayQueue(const std::queue<std::string>& q) {
    std::queue<std::string> temp = q;
    while (!temp.empty()) {
        std::cout << temp.front() << " ";
        temp.pop();
    }
    std::cout << std::endl;
}

int main() {
    std::queue<std::string> customerQueue;
    int customersServed = 0;

    // Add customers to the queue
    customerQueue.push("Customer1");
    customerQueue.push("Customer2");
    customerQueue.push("Customer3");
    customerQueue.push("Customer4");

    std::cout << "Current queue: ";
    displayQueue(customerQueue);

    // Serve customers (remove from front of the queue)
    if (!customerQueue.empty()) {
        customerQueue.pop();
        customersServed++;
    }

    std::cout << "Current queue after serving one customer: ";
    displayQueue(customerQueue);

    // Serve another customer
    if (!customerQueue.empty()) {
        customerQueue.pop();
        customersServed++;
    }

    std::cout << "Current queue after serving another customer: ";
    displayQueue(customerQueue);

    // Display the number of customers served
    std::cout << "Number of customers served: " << customersServed << std::endl;

    return 0;
}
